trigger:
- main  # Adjust to your main branch or specific branches

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureServiceConnection: 'tf-vnet'  # Replace with your Azure service connection name
  awsServiceConnection: 'Aws-s3'      # Replace with your AWS service connection name
  terraformVersion: '1.0.0'                             # Adjust to the required Terraform version
  awsRegion: 'us-east-1'                                # Adjust to your AWS region

stages:
- stage: TerraformApply
  displayName: 'Terraform Apply'
  jobs:
  - job: Terraform
    displayName: 'Terraform Deployment'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - script: |
        sudo apt-get update
        sudo apt-get install -y unzip
      displayName: 'Install dependencies'

    - script: |
        curl -LO https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip
        unzip terraform_${terraformVersion}_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform -v
      displayName: 'Install Terraform'

    - checkout: self
      displayName: 'Checkout GitHub repository'

    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          terraform init -input=false
      displayName: 'Terraform Init'

    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          terraform plan -out=tfplan -input=false
      displayName: 'Terraform Plan'

    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          terraform apply -input=false tfplan
      displayName: 'Terraform Apply'
      
    - task: AWSCLI@1
      inputs:
        awsCredentials: $(awsServiceConnection)
        regionName: $(awsRegion)
        scriptType: 'bash'
        scriptLocation: 'inline'
        inlineScript: |
          echo "Verifying AWS resources..."
          aws s3 ls
      displayName: 'Verify AWS resources'
